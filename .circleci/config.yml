# Javascript Node CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-javascript/ for more details
#
version: 2
jobs:
  checkout:
    docker:
      # specify the version you desire here
      - image: circleci/node:8.6.0-browsers
    steps:
      # Using the `checkout` step, CircleCI will checkout your repository
      - checkout

      # Using the `persist_to_workspace` step, CircleCI will store your changes for the next job
      - persist_to_workspace:
          root: ~/
          paths:
            - ./*
  test:
    docker:
      - image: circleci/node:8.6.0-browsers

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/mongo:3.4.4

    steps:
      # Download and cache dependencies
      - attach_workspace:
          at: ~/
      - restore_cache:
          keys:
            - node-modules-{{ checksum "package-lock.json" }}
            - node-modules-

      - run: npm install

      - save_cache:
          paths:
            - node_modules
          key: node-modules-{{ checksum "package-lock.json" }}

      - run: npm run test-ci
      - persist_to_workspace:
          root: ~/
          paths:
            - ./*
  deploy:
    docker:
      - image: circleci/node:8.6.0-browsers
    steps:
      - attach_workspace:
          at: ~/
      - run: npm run build
      - run: npx now ./dist --token $NOW_TOKEN --public
      - run: cd dist && npx now alias set heineken-team.now.sh --token $NOW_TOKEN
  e2e:
    docker:
      - image: cypress/base:6
        environment:
          ## this enables colors in the output
          TERM: xterm
          CYPRESS_BASE_URL: https://heineken-team.now.sh
    steps:
      - attach_workspace:
          at: ~/
      - run: npm install
      - run: npm run test-sit


workflows:
  # Use CircleCI API version 2
  version: 2

  # Define the `commit` workflow
  commit:
    jobs:
      - checkout
      - test:
          requires:
            - checkout
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
      - e2e:
          requires:
            - deploy
